package com.example.demo.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.example.demo.email.EmailService;
import com.example.demo.model.AppUser;
import com.example.demo.model.Course;
import com.example.demo.repository.CourseRepository;
import com.example.demo.repository.UserRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class CourseService {

    private final CourseRepository courseRepository;
    private final UserRepository userRepository;
    private final EmailService emailService;

    public List<Course> getAllCourses() {
        return courseRepository.findAll();
    }

    public Course getCourseById(Long id) {
        return courseRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"));
    }

    public Course createCourse(Course course) {
        return courseRepository.save(course);
    }

    public Course updateCourse(Long id, Course updated) {
        Course course = getCourseById(id);
        course.setTitle(updated.getTitle());
        course.setDescription(updated.getDescription());
        course.setStartDate(updated.getStartDate());
        course.setEndDate(updated.getEndDate());
        return courseRepository.save(course);
    }

    public void deleteCourse(Long id) {
        courseRepository.deleteById(id);
    }

    public void registerUserToCourse(Long courseId, AppUser user) {
        Course course = courseRepository.findById(courseId)
                .orElseThrow(() -> new RuntimeException("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"));

        course.getParticipants().add(user);
        courseRepository.save(course);


        String subject = "–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫—É—Ä—Å: " + course.getTitle();
        String message = String.format("""
                –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, %s!

                –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫—É—Ä—Å "%s".

                üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: %s
                üìö –û–ø–∏—Å–∞–Ω–∏–µ: %s

                –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —É—á–µ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä!
                """,
                user.getFirstName() != null ? user.getFirstName() : user.getUsername(),
                course.getTitle(),
                course.getStartDate(),
                course.getDescription()
        );

        emailService.sendEmail(user.getUsername(), subject, message);
    }

    public void removeUserFromCourse(Long courseId, AppUser user) {
        Course course = getCourseById(courseId);

        if (course.getParticipants().remove(user)) {
            user.getEnrolledCourses().remove(course);
            courseRepository.save(course);
            userRepository.save(user);
        } else {
            throw new RuntimeException("–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç—Ç–æ–º –∫—É—Ä—Å–µ");
        }
    }
}
